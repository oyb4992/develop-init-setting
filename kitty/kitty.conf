#vim:fileencoding=utf-8:foldmethod=marker  # 파일 인코딩 및 접기 방식 설정

# kitty 설정 파일에 대한 공식 문서 링크입니다.

# 지원되는 전체 폰트 목록을 보려면 `kitty +list-fonts` 명령을 사용하세요.
font_family     IosevkaTerm Nerd Font
#font_family      JetBrainsMono Nerd Font  # 주석 처리된 다른 폰트 설정입니다.
font_size 14.0

scrollback_lines 8000

paste_actions quote-urls-at-prompt

strip_trailing_spaces never

select_by_word_characters @-./_~?&=%+#

show_hyperlink_targets yes

remote_kitty if-needed

# kitty SSH kitten의 연결 공유 옵션에 대한 문서 링크입니다.
share_connections yes

# 링크 열기를 위한 왼쪽 클릭 매핑 해제 (실수로 클릭하기 쉬움)
mouse_map left click ungrabbed no-op

#: 마우스 아래 링크를 클릭하거나 커서를 이동합니다.
mouse_map ctrl+left click ungrabbed mouse_handle_click selection link prompt

mouse_map ctrl+left press ungrabbed mouse_selection normal

mouse_map right press ungrabbed copy_to_clipboard

remember_window_size  yes
initial_window_width  640
initial_window_height 400

#: 활성화하면 창 크기가 기억되어 새 kitty 인스턴스가
#: 이전 인스턴스와 동일한 크기를 갖습니다. 비활성화하면 창은 처음에
#: initial_window_width/height에 구성된 크기(픽셀 단위)를 갖습니다. 너비/높이 값에
#: "c" 접미사를 사용하여 픽셀 대신 셀 수로 해석하도록 할 수 있습니다.

# fat -- 하나 (또는 선택적으로 여러 개)의 창이 상단에 전체 너비로 표시되고 나머지 창은 하단에 나란히 표시됩니다.
# grid -- 모든 창이 그리드 형태로 표시됩니다.
# horizontal -- 모든 창이 나란히 표시됩니다.
# splits -- 가로 및 세로 분할을 사용하여 임의의 패턴으로 배열된 창입니다.
# stack -- 한 번에 하나의 최대화된 창만 표시됩니다.
# tall -- 하나 (또는 선택적으로 여러 개)의 창이 왼쪽에 전체 높이로 표시되고 나머지 창은 오른쪽에 차례로 표시됩니다.
# vertical -- 모든 창이 차례로 표시됩니다.
# 수직 분할 (좌우로 나누기)
map cmd+d launch --location=vsplit

# 수평 분할 (위아래로 나누기) - 기본값 변경 시
map cmd+shift+d launch --location=hsplit

# 방향키로 창 이동
map cmd+left neighboring_window left
map cmd+right neighboring_window right
map cmd+up neighboring_window up
map cmd+down neighboring_window down

enabled_layouts horizontal,vertical,tall,fat,grid
#enabled_layouts all  # 주석 처리된 모든 레이아웃 활성화 설정입니다.

# 레이아웃 전환
map cmd+shift+l next_layout

# 보이지 않는 창에서 명령이 30초 이상 걸리면 알림을 보냅니다.
#notify_on_cmd_finish invisible 30.0  # 주석 처리된 명령어 완료 알림 설정입니다.

# kitty의 splits 레이아웃에 대한 문서 링크입니다.
include splits.conf

#: 활성화된 창 레이아웃입니다. 쉼표로 구분된 레이아웃 이름 목록입니다.
#: 특수 값 all은 모든 레이아웃을 의미합니다. 목록의 첫 번째 레이아웃이
#: 시작 레이아웃으로 사용됩니다. 기본 구성은 모든 레이아웃이 알파벳 순서입니다.
#: 사용 가능한 레이아웃 목록은 https://sw.kovidgoyal.net/kitty/overview/#layouts 를 참조하세요.

window_resize_step_cells 2
window_resize_step_lines 2

#: 키보드로 레이아웃에서 kitty 창 크기를 조정할 때 사용할 단계 크기
#: (셀 너비/셀 높이 단위)입니다 (start_resizing_window).
#: cells 값은 가로 크기 조정에 사용되고 lines 값은 세로 크기 조정에 사용됩니다.

window_border_width 0.5pt



visual_window_select_characters 1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ

#: 시각적 창 선택에 사용할 문자 목록입니다 (예:
#: focus_visible_window로 포커스할 창 선택).
#: 값은 [0-9A-Z] 집합에서 대소문자를 구분하지 않는 고유한 숫자 또는 알파벳 시리즈여야 합니다.
#: 원하는 설정을 문자열로 지정하세요.

# 셸 통합이 활성화된 경우 음수 값을 사용하면 셸 프롬프트에 있는 창은 계산되지 않고,
# 현재 명령이 실행 중인 창만 계산됩니다.
# https://sw.kovidgoyal.net/kitty/conf/#opt-kitty.confirm_os_window_close 를 참조하세요.
confirm_os_window_close -1


tab_bar_style powerline



# 이모티콘 출처: https://emojipedia.org/regional-indicator-symbol-letter-z/
# 제목 파싱 관련 정보: https://github.com/kovidgoyal/kitty/blob/587f44ad4eb7fe545b0e580168cf0c32117b87c7/kitty/tab_bar.py#L175
tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{index}:{'🇿' if layout_name == 'stack' and num_windows > 1 else ''}{title}"



#: 전경색 및 배경색입니다.

#background_opacity 0.95  # 주석 처리된 배경 투명도 설정입니다.
background_opacity 1.0



background_image none

#: 배경 이미지 경로입니다. PNG 형식이어야 합니다.

background_image_layout tiled

#: 배경 이미지를 타일, 스케일 또는 클램프할지 여부입니다. 값은
#: tiled, mirror-tiled, scaled, clamped 중 하나일 수 있습니다.

background_image_linear no

#: 배경 이미지가 스케일될 때 선형 보간을 사용해야 하는지 여부입니다.

dynamic_background_opacity yes

#: 키보드 단축키(increase_background_opacity 및
#: decrease_background_opacity) 또는 원격 제어 기능을 사용하여
#: background_opacity를 동적으로 변경할 수 있도록 허용합니다.
#: 설정을 다시 로드하여 이 설정을 변경하는 것은 지원되지 않습니다.



allow_remote_control yes

#: 다른 프로그램이 kitty를 제어하도록 허용합니다. 이 기능을 켜면 다른
#: 프로그램이 kitty 창에 텍스트 보내기, 새 창 열기, 창 닫기, 창 내용 읽기 등
#: kitty의 모든 측면을 제어할 수 있습니다.  이는 ssh 연결에서도 작동합니다.
#: kitty 내에서 실행되는 모든 프로그램이 제어하도록 허용하거나(yes),
#: kitty --listen-on 명령줄 옵션으로 지정된 소켓에 연결하는 프로그램만
#: 허용하도록 선택할 수 있습니다(socket-only 값 사용).
#: 후자는 ssh를 통해 원격 컴퓨터에서 실행되는 프로그램이 kitty를 제어하는 것을 방지하려는 경우 유용합니다.
#: 설정을 다시 로드해도 이 설정에는 영향을 미치지 않습니다.

#listen_on unix:$XDG_RUNTIME_DIR/kitty.sock  # 주석 처리된 유닉스 소켓 리슨 설정입니다.
#listen_on tcp:localhost:12488  # 주석 처리된 TCP 리슨 설정입니다.


#: 원격 제어 연결을 위해 지정된 유닉스/TCP 소켓에서 수신하도록 kitty에 지시합니다.
#: 이는 모든 kitty 인스턴스에 적용됩니다. kitty --listen-on 명령줄 플래그로
#: 재정의할 수 있습니다. 이 옵션은 unix:${TEMP}/mykitty 또는 (Linux에서) unix:@mykitty와 같은
#: 유닉스 소켓만 허용합니다. 환경 변수가 확장됩니다.
#: {kitty_pid}가 있으면 kitty 프로세스의 PID로 대체되고, 그렇지 않으면
#: kitty 프로세스의 PID가 하이픈과 함께 값에 추가됩니다. 이 옵션은
#: 원격 제어를 활성화하기 위해 allow_remote_control도 설정하지 않으면 무시됩니다.
#: 자세한 내용은 kitty --listen-on 도움말을 참조하세요.
#: 설정을 다시 로드하여 이 옵션을 변경하는 것은 지원되지 않습니다.


#startup_session none  # 주석 처리된 시작 세션 없음 설정입니다.
startup_session session.conf



allow_hyperlinks yes

#: 하이퍼링크(OSC 8) 이스케이프 시퀀스를 처리합니다. 비활성화하면 OSC 8
#: 이스케이프 시퀀스가 무시됩니다. 그렇지 않으면 마우스나 hints kitten
#: </kittens/hints>으로 클릭할 수 있는 클릭 가능한 링크가 됩니다.
#: ``ask``라는 특수 값은 클릭 시 kitty가 링크를 열기 전에 물어본다는 의미입니다.

shell_integration enabled

#: 지원되는 셸에서 셸 통합을 활성화합니다. 이렇게 하면 지원되는 셸에서
#: 이전 프롬프트로 이동, 이전 명령의 출력을 페이저로 탐색하는 등의 기능이 활성화됩니다.
#: 셸 통합을 완전히 끄려면 ``disabled``로 설정하세요. 자세한 내용은
#: https://sw.kovidgoyal.net/kitty/shell-integration/ 를 참조하세요.

#term xterm-kitty  # 주석 처리된 터미널 유형 설정입니다.
term xterm-256color



kitty_mod ctrl+shift

# kitty_mod는 키가 아닌 수식키여야 합니다. 다음 링크를 참조하세요.
# https://github.com/kovidgoyal/kitty/discussions/3457#discussioncomment-587511
# 따라서 다음과 같이 할 수 없습니다:
#kitty_mod ctrl+a  # 주석 처리된 잘못된 kitty_mod 설정 예시입니다.



#map kitty_mod+enter new_window  # 주석 처리된 새 창 열기 단축키입니다.
# ctrl+shift+v 붙여넣기 명령 후 엔터 키를 눌러 실수로 창이 생성될 수 있으므로 이 기능을 비활성화합니다.
map kitty_mod+enter no-op
map cmd+enter       no-op

map ctrl+a>x close_window
map ctrl+a>] next_window
map ctrl+a>[ previous_window
map ctrl+a>period move_window_forward
map ctrl+a>comma move_window_backward

map cmd+c copy_to_clipboard
map cmd+v paste_from_clipboard

#map kitty_mod+t new_tab_with_cwd  # 주석 처리된 현재 작업 디렉토리로 새 탭 열기 단축키입니다.
# map kitty_mod+t new_tab  # 주석 처리된 새 탭 열기 단축키입니다.
map kitty_mod+t launch --location=hsplit
# LazyVim에서 자주 쓰는 nvim 단축키 추가
map kitty_mod+n launch --type=tab nvim
# ssh 접속을 자주 한다면, ssh 전용 탭 단축키 추가
map kitty_mod+s launch --type=tab ssh 
# new_tab은 현재 작업 디렉토리(cwd)를 유지하지 않습니다. 대신 `new_tab_with_cwd`를 사용하거나 `launch --cwd=current --type=tab`을 사용하세요.
# 자세한 내용은 https://sw.kovidgoyal.net/kitty/faq/#how-do-i-open-a-new-window-or-tab-with-the-same-working-directory-as-the-current-window 를 참조하세요.
# `--cwd=last_reported`를 통해 tmux와 유사한 탭 생성, 경고: 이 기능은 kitty `shell_integration enabled`가 필요합니다.
map ctrl+a>c launch --cwd=last_reported --type=tab

map ctrl+a>, set_tab_title


#: 글꼴 크기 늘리기

map ctrl+equal  change_font_size all +2.0
map ctrl+plus   change_font_size all +2.0
map ctrl+kp_add change_font_size all +2.0


#: 글꼴 크기 줄이기

map ctrl+minus       change_font_size all -2.0
map ctrl+kp_subtract change_font_size all -2.0


#: 글꼴 크기 초기화

map ctrl+0 change_font_size all 0




map f11 toggle_fullscreen


# map ctrl+a>e edit_config_file  # 주석 처리된 설정 파일 편집 단축키입니다.
map ctrl+a>e no-op
map ctrl+a>shift+e launch --type=tab nvim ~/.config/kitty/kitty.conf


#: kitty.conf 다시 로드

map ctrl+a>shift+r combine : load_config_file : launch --type=overlay sh -c 'echo "kitty config reloaded."; echo; read -r -p "Press Enter to exit"; echo ""'

#: kitty 설정 디버그

map ctrl+a>shift+d     debug_config



# KITTY 테마 시작
# Catppuccin-Mocha 테마입니다.
# include current-theme.conf
# KITTY 테마 끝

# 기본 알파벳 정보: https://github.com/kovidgoyal/kitty/blob/0c4b20aa4e6b29ccf7c389e15d7ff5189f8e98f5/kittens/hints/main.py#L125
# qwerty 알파벳은 https://github.com/fcsonline/tmux-thumbs#Alphabets 에서 가져왔습니다.
map ctrl+a>space kitten hints --alphabet asdfqwerzxcvjklmiuopghtybn1234567890 --customize-processing custom-hints.py

map f3 kitten hints --program '*'

# 관련 링크: https://github.com/console-rs/console/pull/85/files
# 관련 링크: https://github.com/console-rs/console/pull/84
# ctrl+a를 두 번 누르면 ctrl+a (home)로 매핑합니다.
map ctrl+a>ctrl+a send_text all \x01


# BEGIN_KITTY_THEME
# Catppuccin-Mocha
include current-theme.conf
# END_KITTY_THEME