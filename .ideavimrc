" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
" Do incremental searching.
set incsearch
set hls
set clipboard+=unnamed
" 변경 사항을 저장하기 전에 저장 확인
set formatoptions=jcroqlnt
" 줄 번호 표시
set number
" 상대 줄 번호
set relativenumber
" 문맥 줄 수
set scrolloff=4
" 반올림 들여쓰기
"set shiftround
" 문맥 열 수
set sidescrolloff=8
" which-key에서는 높게 설정하거나 notimeout을 설정하라고 합니다.
set notimeout
" 줄 바꿈 비활성화
set nowrap
set backspace=indent,eol,start
set formatoptions=tcqj
set listchars=tab:>\ ,trail:-,nbsp:+
" Don't use Ex mode, use Q for formatting.
map Q gq

" 자동 들여쓰기
set autoindentset smartindentset tabstop=4set shiftwidth=4set expandtab
" 커서 설정
set cursorline 
" 현재 라인 강조
set guicursor=n-v-c-sm:block,o:hor,i-ci-ve:ver,r-cr:hor,a:blinkwait700-blinkoff400-blinkon250-Cursor/lCursor,sm:block-Cursor-blinkwait175-blinkoff150-blinkon175
" 검색 설정 (기존 설정 외 추가)
set ignorecase 
" 검색 시 대소문자 무시
set smartcase " 검색 패턴에 대문자가 있으면 대소문자 구별
" UI 개선
set wildmenu 
" Tab 자동 완성 향상
set visualbell 
" 벨 소리 대신 화면 깜빡임
set ttyfast " 터미널 환경 최적화
" 편집 기능 강화
set formatoptions+=r " 주석 줄에 대해 자동 줄 바꿈 활성화
set formatoptions+=o " 주석 삽입 시 현재 줄과 같은 주석 접두사 사용

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins
let mapleader=" "

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'terryma/vim-multiple-cursors'
" Plug 'vim-scripts/ReplaceWithRegister'
"레지스터 관련 플러그인 활성화
set peekaboo
set which-key
set notimeout
let g:WhichKey_FontSize = 14
"" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
map <leader>r <Action>(ReformatCode)

"-----------------------------------------------------------------------"
" easymotion 설정
"-----------------------------------------------------------------------"
let g:EasyMotion_smartcase = 1
let g:EasyMotion_do_mapping = 0

" easymotion config
map <Leader>l <Plug>(easymotion-lineforward)
map <Leader>j <Plug>(easymotion-j)
map <Leader>k <Plug>(easymotion-k)
map <Leader>h <Plug>(easymotion-linebackward)
map <Leader>a <Plug>(easymotion-jumptoanywhere)
map <Leader>s <Plug>(easymotion-sn)
" 창 삭제
nmap <leader>td <Action>(CloseContent)
" 모든 탭 닫기
nmap <leader>ta <Action>(CloseAllEditors)
" 다른 탭 닫기 (현재 탭 제외)
nmap <leader>to <Action>(CloseAllEditorsButActive)
" 다음 탭으로 이동
nmap <leader>t] <Action>(NextTab)
" 이전 탭으로 이동
nmap <leader>t[ <Action>(PreviousTab)
" 수정되지 않은 탭 닫기 매핑
nmap <leader>tu <Action>(CloseAllUnmodifiedEditors)

nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences
" 디버그 실행
nmap <leader>dd <Action>(Debug)
" 디버그 종료
nmap <leader>ds <Action>(Stop)
" 중단점 토글
nmap <leader>db <Action>(ToggleLineBreakpoint)
" 탐색기 NeoTree (현재 작업 디렉토리)
" Switcher
nmap <leader>, <Action>(Switcher)
" MerdTree 설정
nmap <leader>e :NERDTree<CR>
nmap <leader>E :NERDTreeFind<CR>
" 아래에 창 분할. :split<cr>은 작동하지 않습니다.
nmap <leader>- <c-w>s
" 오른쪽에 창 분할
nmap <leader><bar> <c-w>v
" 최대화 토글
nmap <leader>m <Action>(ToggleDistractionFreeMode)

" 일반 키 매핑

" 왼쪽 창으로 이동
nmap <C-h> <C-w>h
" 아래쪽 창으로 이동
"nmap <C-j> <C-w>j
" 위쪽 창으로 이동
"nmap <C-k> <C-w>k
" 오른쪽 창으로 이동
nmap <C-l> <C-w>l
" 아래로 이동
nmap <C-S-j> :action MoveLineDown<CR>
imap <C-S-j> <Esc>:action MoveLineDown<CR>i
vmap <C-S-j> :action MoveLineDown<CR>
" 위로 이동
nmap <C-S-k> :action MoveLineUp<CR>
imap <C-S-k> <Esc>:action MoveLineUp<CR>i
vmap <C-S-k> :action MoveLineUp<CR>

" 정의로 이동 (Go to Declaration)
nmap <leader>gd <Action>(GotoDeclaration)
" 구현체 찾기 (Go to Implementation(s))
nmap <leader>gi <Action>(GotoImplementation)
" 사용 위치 찾기 (Find Usages)
nmap <leader>gu <Action>(FindUsages)
" 타입 계층 구조 보기 (Type Hierarchy)
nmap <leader>th <Action>(TypeHierarchy)
" 메소드 계층 구조 보기 (Method Hierarchy)
nmap <leader>mh <Action>(MethodHierarchy)

" 레지스터
"nmap <leader>x :registers<CR>