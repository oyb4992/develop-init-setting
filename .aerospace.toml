# 이 설정 파일의 복사본을 ~/.aerospace.toml 로 저장하세요.
# 그 후, ~/.aerospace.toml 파일을 원하는 대로 편집할 수 있습니다.

# macOS 사용자 세션에 로그인한 후 실행할 명령을 추가하는 데 사용할 수 있습니다.
# 'after-login-command'가 작동하려면 'start-at-login'이 'true'여야 합니다.
# 사용 가능한 명령어: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# AeroSpace 시작 후 실행할 명령을 추가하는 데 사용할 수 있습니다.
# 'after-startup-command'는 'after-login-command' 이후에 실행됩니다.
# 사용 가능한 명령어: https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
    # JankyBorders는 이미 실행 중인 프로세스를 감지하는 기능이 내장되어 있어,
    # AeroSpace 재시작 시 두 번 실행되지 않습니다.
    'exec-and-forget borders active_color=0xff00ff00 inactive_color=0xff494d64 width=5.0'
]

# 로그인 시 AeroSpace 시작
start-at-login = true

# 정규화. 참고: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# 참고: https://nikitabobko.github.io/AeroSpace/guide#layouts
# 'accordion-padding'은 아코디언 패딩의 크기를 지정합니다.
# 패딩 기능을 비활성화하려면 0으로 설정할 수 있습니다.
accordion-padding = 30

# 가능한 값: tiles|accordion (타일|아코디언)
default-root-container-layout = 'tiles'

# 가능한 값: horizontal|vertical|auto (수평|수직|자동)
# 'auto' 의미: 넓은 모니터(높이보다 너비가 넓은 경우)는 수평 방향,
#               높은 모니터(너비보다 높이가 높은 경우)는 수직 방향
default-root-container-orientation = 'auto'

# 포커스된 모니터가 변경될 때 마우스 커서가 따라갑니다.
# 이 동작을 원하지 않으면 설정에서 제거하세요.
# 참고: https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# 참고: https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# 기본값 (키를 생략한 경우): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']
on-focus-changed = "move-mouse window-lazy-center"

# 이 플래그를 토글하여 macOS의 "응용 프로그램 가리기"(cmd-h) 기능을 효과적으로 끌 수 있습니다.
# 이 macOS 기능을 사용하지 않지만 실수로 cmd-h 또는 cmd-alt-h 키를 누르는 경우 유용합니다.
# 참고: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

# 가능한 값: (qwerty|dvorak)
# 참고: https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# 창 사이의 간격(inner-*) 및 모니터 가장자리와의 간격(outer-*).
# 가능한 값:
# - 상수:     gaps.outer.top = 8
# - 모니터별: gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#             이 예시에서, 24는 일치하는 패턴이 없을 때의 기본값입니다.
#             모니터 패턴은 'workspace-to-monitor-force-assignment'와 동일합니다.
#             참고: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5 # 내부 수평 간격
inner.vertical =   5 # 내부 수직 간격
outer.left =       5 # 외부 왼쪽 간격
outer.bottom =     5 # 외부 아래쪽 간격
outer.top =        5 # 외부 위쪽 간격
outer.right =      5 # 외부 오른쪽 간격

# 'main' 바인딩 모드 선언
# 참고: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' 바인딩 모드는 항상 존재해야 합니다.
# 기본값 (키를 생략한 경우): mode.main.binding = {}
[mode.main.binding]

# 가능한 모든 키:
# - 문자.           a, b, c, ..., z
# - 숫자.           0, 1, 2, ..., 9
# - 키패드 숫자.    keypad0, keypad1, keypad2, ..., keypad9
# - F 키.          f1, f2, ..., f20
# - 특수 키.       minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - 키패드 특수 키. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - 화살표 키.      left, down, up, right

# 가능한 모든 보조 키: cmd, alt, ctrl, shift

# 가능한 모든 명령어: https://nikitabobko.github.io/AeroSpace/commands

# 참고: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# 아래 줄들의 주석을 해제하여 alt + enter 단축키로 터미널을 열 수 있습니다 (i3와 유사)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "Terminal"
#     do script
#     activate
# end tell'
# '''
# 앱 실행 단축키들
alt-shift-cmd-ctrl-a = 'exec-and-forget open /Applications/Arc.app'
alt-shift-cmd-ctrl-z = 'exec-and-forget open /Applications/Zen.app'
alt-shift-cmd-ctrl-k = 'exec-and-forget open /Applications/KakaoTalk.app'
alt-shift-cmd-ctrl-s = 'exec-and-forget open /Applications/Slack.app'
alt-shift-cmd-ctrl-i = 'exec-and-forget open ~/Applications/"IntelliJ IDEA Ultimate.app"'
alt-shift-cmd-ctrl-c = 'exec-and-forget open /Applications/Cursor.app'
alt-shift-cmd-ctrl-r = 'exec-and-forget open /Applications/Trae.app'
alt-shift-cmd-ctrl-l = 'exec-and-forget open ~/Applications/LobeChat.app'
alt-shift-cmd-ctrl-t = 'exec-and-forget open /Applications/iTerm.app'
alt-shift-cmd-ctrl-o = 'exec-and-forget open /Applications/Obsidian.app'
alt-shift-cmd-ctrl-b = 'exec-and-forget open /Applications/Boop.app'
alt-shift-cmd-ctrl-f = 'exec-and-forget open ~' # Finder로 홈 디렉토리 열기
alt-shift-cmd-ctrl-p = '''exec-and-forget osascript -e 'tell application "PopClip" to appear'''
alt-shift-cmd-ctrl-h = 'exec-and-forget open /Applications/HTTPie.app'

# 참고: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical' # 타일 레이아웃 (가로/세로 자동 전환)
alt-comma = 'layout accordion horizontal vertical' # 아코디언 레이아웃 (가로/세로 자동 전환)
alt-shift-space = 'layout floating tiling' # 플로팅/타일링 레이아웃 전환

# 참고: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left' # 왼쪽 창으로 포커스 이동
alt-j = 'focus down' # 아래쪽 창으로 포커스 이동
alt-k = 'focus up'   # 위쪽 창으로 포커스 이동
alt-l = 'focus right' # 오른쪽 창으로 포커스 이동

# 참고: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left' # 창을 왼쪽으로 이동
alt-shift-j = 'move down' # 창을 아래쪽으로 이동
alt-shift-k = 'move up'   # 창을 위쪽으로 이동
alt-shift-l = 'move right' # 창을 오른쪽으로 이동

# 참고: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -50' # 창 크기 지능적으로 줄이기
alt-shift-equal = 'resize smart +50' # 창 크기 지능적으로 늘리기
alt-shift-0 = 'balance-sizes' # 창 크기 균형 맞추기

# 참고: https://nikitabobko.github.io/AeroSpace/commands#workspace
# 기존 숫자 기반 워크스페이스 (주석 처리됨)
#alt-1 = 'workspace 1'
# ... (alt-9 까지)
# 알파벳 기반 워크스페이스
alt-a = 'workspace A' # AI 관련
alt-b = 'workspace B' # 브라우저
alt-d = 'workspace D' # 문서 작업
alt-e = 'workspace E' # 파인더 (탐색기)
alt-i = 'workspace I' # IDE (개발 환경)
alt-m = 'workspace M' # 메신저
alt-n = 'workspace N' # 노트
alt-t = 'workspace T' # 터미널
alt-w = 'workspace W' # 윈도우 (가상 머신 등)
alt-z = 'workspace Z' # 기타

# 참고: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# 기존 숫자 기반 워크스페이스로 노드 이동 (주석 처리됨)
#alt-shift-1 = 'move-node-to-workspace --focus-follows-window 1'
# ... (alt-shift-9 까지)
# 알파벳 기반 워크스페이스로 노드 이동 (창 이동 후 해당 워크스페이스로 포커스 이동)
alt-shift-a = 'move-node-to-workspace --focus-follows-window A'
alt-shift-b = 'move-node-to-workspace --focus-follows-window B'
alt-shift-d = 'move-node-to-workspace --focus-follows-window D'
alt-shift-e = 'move-node-to-workspace --focus-follows-window E'
alt-shift-i = 'move-node-to-workspace --focus-follows-window I'
alt-shift-n = 'move-node-to-workspace --focus-follows-window N'
alt-shift-m = 'move-node-to-workspace --focus-follows-window M'
alt-shift-t = 'move-node-to-workspace --focus-follows-window T'
alt-shift-w = 'move-node-to-workspace --focus-follows-window W'
alt-shift-z = 'move-node-to-workspace --focus-follows-window Z'

# 멀티 모니터 설정을 위한 추가 단축키
alt-cmd-h = 'focus-monitor --wrap-around prev' # 이전 모니터로 포커스 이동 (순환)
alt-cmd-l = 'focus-monitor --wrap-around next' # 다음 모니터로 포커스 이동 (순환)

# alt-shift-cmd-ctrl-tab = 'focus-monitor --wrap-around next' # 동일 기능 단축키(alt-cmd-l)가 있으므로 주석 처리

# 참고: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth' # 이전 워크스페이스로 전환

# 참고: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next' # 현재 워크스페이스를 다음 모니터로 이동 (순환)
# 아래처럼 설정하면 워크스페이스 이동 후 이전 워크스페이스로 돌아옵니다.
#alt-shift-tab = ['move-workspace-to-monitor --wrap-around next',
#'workspace-back-and-forth'  # 이전 작업 공간으로 복귀
#]

# 참고: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service' # 'service' 모드로 진입

# 'service' 바인딩 모드 선언.
# 참고: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main'] # 설정 다시 로드하고 'main' 모드로 복귀
r = ['flatten-workspace-tree', 'mode main'] # 레이아웃 초기화 (트리 평탄화)하고 'main' 모드로 복귀
f = ['layout floating tiling', 'mode main'] # 플로팅/타일링 레이아웃 전환하고 'main' 모드로 복귀
backspace = ['close-all-windows-but-current', 'mode main'] # 현재 창 제외 모든 창 닫고 'main' 모드로 복귀

# 화면 레이아웃 관리 (service 모드 내에서)
# 1 = ['layout tiles', 'mode main'] # 타일 레이아웃으로 변경하고 'main' 모드로 복귀
# 2 = ['layout accordion', 'mode main'] # 아코디언 레이아웃으로 변경하고 'main' 모드로 복귀

# sticky 레이아웃은 아직 지원되지 않습니다: https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

# `join-with` 명령어 (service 모드에서 shift + 방향키로 활성화)
shift-h = ['join-with left', 'mode main'] # 왼쪽 창과 합치고 'main' 모드로 복귀
shift-j = ['join-with down', 'mode main'] # 아래쪽 창과 합치고 'main' 모드로 복귀
shift-k = ['join-with up', 'mode main']   # 위쪽 창과 합치고 'main' 모드로 복귀
shift-l = ['join-with right', 'mode main'] # 오른쪽 창과 합치고 'main' 모드로 복귀

# 볼륨 조절 (service 모드 내에서)
down = 'volume down' # 볼륨 줄이기
up = 'volume up'     # 볼륨 높이기
shift-down = ['volume set 0', 'mode main'] # 음소거 하고 'main' 모드로 복귀

# 창 감지 시 실행 규칙 ([[on-window-detected]])
# 특정 앱 ID를 가진 창이 감지되면 지정된 워크스페이스로 이동하거나 레이아웃을 변경합니다.

[[on-window-detected]]
if.app-id = 'com.googlecode.iterm2' # iTerm2
run = 'move-node-to-workspace T'    # 'T' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser' # Arc 브라우저
run = 'move-node-to-workspace B'         # 'B' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.apple.Safari' # Safari
run = 'move-node-to-workspace B' # 'B' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.jetbrains.intellij' # IntelliJ IDEA
run = 'move-node-to-workspace I'     # 'I' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92' # Electron 기반 앱일 가능성 (예: Cursor)
run = 'move-node-to-workspace I'           # 'I' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'io.httpie.desktop' # HTTPie
run = 'move-node-to-workspace T'  # 'T' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.apple.finder' # Finder
run = 'move-node-to-workspace E' # 'E' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.apple.Safari.WebApp.D1753E26-83B1-4E92-B835-1EE42BF21E60' # 특정 웹앱일 가능성 (예: LobeChat PWA?)
run = 'move-node-to-workspace A'                                            # 'A' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'md.obsidian' # Obsidian
run = 'move-node-to-workspace N' # 'N' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.microsoft.Excel' # Microsoft Excel
run = 'move-node-to-workspace D'  # 'D' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.microsoft.Word' # Microsoft Word
run = 'move-node-to-workspace D' # 'D' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.microsoft.Powerpoint' # Microsoft Powerpoint
run = 'move-node-to-workspace D'       # 'D' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.kakao.KakaoTalkMac' # 카카오톡
run = ['layout floating', 'move-node-to-workspace M'] # 플로팅 레이아웃으로 변경 후 'M' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap' # Slack
run = ['layout floating', 'move-node-to-workspace M'] # 플로팅 레이아웃으로 변경 후 'M' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.okatbest.boop' # Boop
run = 'layout floating'          # 플로팅 레이아웃으로 변경

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor' # 활성 상태 보기
run = 'layout floating'                # 플로팅 레이아웃으로 변경

[[on-window-detected]]
if.app-id = 'com.utmapp.UTM' # UTM (가상화)
run = 'move-node-to-workspace W' # 'W' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.vmware.fusion' # VMware Fusion (가상화)
run = 'move-node-to-workspace W'  # 'W' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.apple.mail' # Mail
run = 'move-node-to-workspace M' # 'M' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode' # Visual Studio Code
run = 'move-node-to-workspace I'   # 'I' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.trae.app' # Trae? (번역기 앱 추정)
run = 'move-node-to-workspace I' # 'I' 워크스페이스로 이동 (임시, 필요시 조정)

[[on-window-detected]]
if.app-id = 'com.google.Chrome' # Google Chrome
run = 'move-node-to-workspace B'  # 'B' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen' # Zen Browser
run = 'move-node-to-workspace B'    # 'B' 워크스페이스로 이동

[[on-window-detected]]
if.app-id = 'com.tdesktop.Telegram' # Telegram
run = ['layout floating', 'move-node-to-workspace M'] # 플로팅 레이아웃으로 변경 후 'M' 워크스페이스로 이동

# 특정 앱을 창 관리에서 제외 (플로팅으로 설정)
[[on-window-detected]]
if.app-id = 'com.trendmicro.TrendCleanerPro' # 여기에 제외할 앱의 ID를 입력하세요
run = 'layout floating'       # 해당 앱의 창을 플로팅 모드로 설정

[[on-window-detected]]
if.app-id = 'com.linguee.DeepLCopyTranslator' # 여기에 제외할 앱의 ID를 입력하세요
run = 'layout floating'       # 해당 앱의 창을 플로팅 모드로 설정